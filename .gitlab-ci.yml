stages:
  - ssh_gen
  - plan
  - apply
  - debug
  - ansible
  - destroy

variables:
  TERRAFORM_VERSION: 1.5.7
  GCP_PROJECT_ID: ${GCP_PROJECT_ID}
  TF_ADDRESS: =https://gitlab.com/api/v4/projects/50683042/terraform/state/
 

gen_ssh_key:
  image: bash:latest
  stage: ssh_gen
  script:
    - apk update && apk add openssh-client
    - mkdir .keys && cd ./.keys
    - ssh-keygen -f vm_keys -q -t rsa -N "" && echo "Keys successfully generated"
  artifacts:
    name: "ssh-keys"
    expire_in: "1 day"
    paths:
      - .keys
     

.provision_job:
  script:
    - apk update && apk upgrade
    - apk add unzip
    - wget -O terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_386.zip
    - unzip terraform.zip && mv ./terraform /bin
    - terraform -version
     
    - >
        terraform init 
        -backend-config="address=${TF_ADDRESS}/dev"
        -backend-config="lock_address=${TF_ADDRESS}/dev/lock" 
        -backend-config="unlock_address=${TF_ADDRESS}/dev/lock
        -backend-config="username=oshopayng" \
        -backend-config="password=$PERSONAL_ACCESS_TOKEN" \
        -backend-config="lock_method=POST" \
        -backend-config="unlock_method=DELETE" \
        -backend-config="retry_wait_min=5"
      #   -backend-config="bucket=${TF_STATE_BUCKET}" 
     #   -backend-config="prefix=${TF_STATE_OBJECT}" 
     #   -backend-config="credentials=${GCP_SERVICE_ACCOUNT_KEY}" 



      
dry_provision:
  image: alpine:3.18.2
  stage: plan
  only:
    variables:
      - $CI_COMMIT_REF_NAME == "dev-ci"
  script:
    - !reference [.provision_job, script]
    - terraform validate
    - terraform plan

actual_provision:
  image: alpine:3.18.2
  stage: apply
  
  allow_failure: true
  only:
    variables:
      - $CI_COMMIT_REF_NAME == "dev-ci"
  script:
    - !reference [.provision_job, script]
   
    - terraform apply -auto-approve
    - sleep 30

  artifacts:
    name: "vm_ip"
    expire_in: "1 day"
    paths:
      - '*_vm_ip.txt'
    
  
ansible_conf:
  image: python:3.9.17-slim-bullseye
  stage: ansible
  allow_failure: true
  only:
    variables:
      - $CI_COMMIT_REF_NAME == "dev-ci"
  script:
    
    - cat vm_ip.txt > vm_ip.txt
    - cat vm_ip.txt
    - chmod 750 ansible_files
    - cd ansible_files
    - apt-get update && apt-get install ansible -y
    - ansible --version
    - ansible-playbook install_nginx.yml

dry_destroy_tf:
  image: alpine:3.18.2
  stage: destroy
  only:
    variables:
      - $CI_COMMIT_REF_NAME == "dev-ci"
  when: manual
  script:
    - !reference [.provision_job, script]
    - terraform plan -destroy

actual_destroy_tf:
  image: alpine:3.18.2
  stage: destroy
  when: manual
  only:
    variables:
      - $CI_COMMIT_REF_NAME == "dev-ci"
  script:
    - !reference [.provision_job, script]
    - terraform destroy -auto-approve

